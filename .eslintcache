[{"/Users/logan/Active-Projects/peak-react/peak-fe/src/index.js":"1","/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/Home.js":"2","/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/MyAccount.js":"3","/Users/logan/Active-Projects/peak-react/peak-fe/src/utils/Context.js":"4","/Users/logan/Active-Projects/peak-react/peak-fe/src/components/blogBtnCont/index.js":"5","/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/InDepthPost.js":"6","/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/Login.js":"7","/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/Signup.js":"8","/Users/logan/Active-Projects/peak-react/peak-fe/src/components/navbar/index.js":"9","/Users/logan/Active-Projects/peak-react/peak-fe/src/App.js":"10","/Users/logan/Active-Projects/peak-react/peak-fe/src/utils/API.js":"11","/Users/logan/Active-Projects/peak-react/peak-fe/src/reportWebVitals.js":"12","/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/Bookmarks.js":"13"},{"size":500,"mtime":1619588161882,"results":"14","hashOfConfig":"15"},{"size":2399,"mtime":1617255606371,"results":"16","hashOfConfig":"15"},{"size":4858,"mtime":1617261269321,"results":"17","hashOfConfig":"15"},{"size":198,"mtime":1610594535795,"results":"18","hashOfConfig":"15"},{"size":2263,"mtime":1617063073606,"results":"19","hashOfConfig":"15"},{"size":2654,"mtime":1617254511273,"results":"20","hashOfConfig":"15"},{"size":4185,"mtime":1619587455958,"results":"21","hashOfConfig":"15"},{"size":3160,"mtime":1617245287923,"results":"22","hashOfConfig":"15"},{"size":3721,"mtime":1619589264947,"results":"23","hashOfConfig":"15"},{"size":2014,"mtime":1619587410195,"results":"24","hashOfConfig":"15"},{"size":7129,"mtime":1617261511192,"results":"25","hashOfConfig":"15"},{"size":362,"mtime":1610594535000,"results":"26","hashOfConfig":"15"},{"size":268,"mtime":1617255109342,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"h354kr",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"/Users/logan/Active-Projects/peak-react/peak-fe/src/index.js",[],["65","66"],"/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/Home.js",[],["67","68"],"/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/MyAccount.js",["69"],"import React, { useContext, useEffect, useState } from \"react\";\nimport UserContext from \"../utils/Context\";\nimport API from \"../utils/API\";\nimport \"../stylesheets/myAccount.css\";\n\nexport default function MyAccount() {\n  const [topComments, setTopComments] = useState([]);\n  const [topPosts, setTopPosts] = useState([]);\n  const { user, getUser } = useContext(UserContext);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const getTopPosts = async (id) => {\n    await API.getTopUserPosts(id).then(async (res) => {\n      setTopPosts(res.data);\n    });\n  };\n\n  useEffect(() => {\n    if (Object.keys(user).length) {\n      console.log(user, \"user if object is full\");\n      getTopPosts(user.id);\n    } else {\n      (async () => {\n        let userToReload = localStorage.getItem(\"loggedInUserId\");\n        await API.getUserInfo(userToReload).then((res) => {\n          getUser(res.data);\n        });\n      })();\n    }\n  }, [getUser, user]);\n\n  return (\n    <div className=\"account-page container-fixed\">\n      <div className=\"account-content\">\n        {/* {user.map((index) => ( */}\n        <div className=\"leftSide\">\n          <div className=\"infoRowOne\">\n            <div className=\"shit\">\n              <h3 className=\"firstNameHeaderText\" id=\"headerText\">\n                First Name\n              </h3>\n              <h4 className=\"firstNameText\" id=\"infoText\">\n                {/* {index.first_name} */}\n                {user.first_name}\n              </h4>\n            </div>\n            <div className=\"shit\">\n              <h3 className=\"userNameSecText\" id=\"headerText\">\n                User Name\n              </h3>\n              <h4 className=\"usernameInput\" id=\"infoText\">\n                {/* {index.username} */}\n                {user.username}\n              </h4>\n            </div>\n          </div>\n          <div className=\"infoRowOne\">\n            <div className=\"shit\">\n              <h3 className=\"cityHeaderText\" id=\"headerText\">\n                City\n              </h3>\n              <h4 className=\"cityText\" id=\"infoText\">\n                {/* {index.city} */}\n                {user.city}\n              </h4>\n            </div>\n            <div className=\"shit\">\n              <h3 className=\"titleHeaderText\" id=\"headerText\">\n                Title\n              </h3>\n              <h4 className=\"titleText\" id=\"infoText\">\n                {/* {index.job_title} */}\n                {user.job_title}\n              </h4>\n            </div>\n          </div>\n          <div className=\"infoRowOne\">\n            <div className=\"shit\">\n              <h3 className=\"lastNameHeaderText\" id=\"headerText\">\n                Last Name\n              </h3>\n              <h4 className=\"lastNameText\" id=\"infoText\">\n                {/* {index.last_name} */}\n                {user.last_name}\n              </h4>\n            </div>\n            <div className=\"shit\">\n              <h3 className=\"emailHeaderText\" id=\"headerText\">\n                Email\n              </h3>\n              <h4 className=\"emailText\" id=\"infoText\">\n                {/* {index.email} */}\n                {user.email}\n              </h4>\n            </div>\n          </div>\n          <div className=\"infoRowOneIsh\">\n            <div className=\"shit\">\n              <h3 className=\"zipcodeHeaderText\" id=\"headerText\">\n                Zipcode\n              </h3>\n              <h4 className=\"zipcodeText\" id=\"infoText\">\n                {/* {index.zipcode} */}\n                {user.zipcode}\n              </h4>\n            </div>\n            <div className=\"shit\">\n              <h3 className=\"ageHeaderText\" id=\"headerText\">\n                Age\n              </h3>\n              <h4 className=\"ageText\" id=\"infoText\">\n                {/* {index.age} */}\n                {user.age}\n              </h4>\n            </div>\n          </div>\n        </div>\n        {/* ))} */}\n      </div>\n      <div className=\"topStatsCont\">\n        <div className=\"topPostsCont\">\n          <h1 id=\"topStatsHeaderText\">Top Posts</h1>\n          {topPosts.map((index) => (\n            <button className=\"postBox\">\n              <img\n                className=\"postImg\"\n                alt=\"Post Images\"\n                src={index.blog_img}\n              ></img>\n              <div className=\"makeFlexCol\">\n                <div className=\"postTitleCont\">\n                  <h3 className=\"postTitle\">{index.post_title}</h3>\n                  <h4>Likes : {index.blog_likes}</h4>\n                </div>\n              </div>\n            </button>\n          ))}\n        </div>\n        <div className=\"topCommentsCont\">\n          <h1 id=\"topStatsHeaderText\">Top Comments</h1>\n          {topComments.map((index, mapKey) => (\n            <button className=\"commentBox\" key={mapKey}>\n              <h3>{index.comment_body}</h3>\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/logan/Active-Projects/peak-react/peak-fe/src/utils/Context.js",[],["70","71"],"/Users/logan/Active-Projects/peak-react/peak-fe/src/components/blogBtnCont/index.js",["72","73","74","75","76"],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport bookMarkIcon from \"../../images/bookmark-unchecked.png\";\nimport bookMarkIconClicked from \"../../images/bookmark-checked.png\";\nimport thumbsUpIcon from \"../../images/thumbs-up.png\";\nimport thumbsUpIconClicked from \"../../images/thumbs-up-clicked.png\";\nimport settingsIcon from \"../../images/settings-icon.png\";\nimport API from \"../../utils/API\";\nimport \"./style.css\";\n\nexport default function BlogBtnCont(props) {\n  const [bookMarked, setBookmarked] = useState(bookMarkIcon);\n  const [likeBtn, setLikeBtn] = useState(thumbsUpIcon);\n  const [settingsClicked, setSettingsClicked] = useState(false);\n  const [numOfLikes, setNumOfLikes] = useState(props.numOfLikes);\n  const [userClicked, setUserClicked] = useState(false);\n\n  const addLike = async () => {\n    if (userClicked === false) {\n      setNumOfLikes(numOfLikes + 1);\n      setLikeBtn(thumbsUpIconClicked);\n      var postIdToSend = props.postId;\n      var postTitleToSend = props.postTitle;\n      var likesPlusOne = numOfLikes + 1;\n      await API.addLike(postIdToSend, likesPlusOne, postTitleToSend).then(\n        setUserClicked(true)\n      );\n    } else if (userClicked === true) {\n      setNumOfLikes(numOfLikes - 1);\n      setLikeBtn(thumbsUpIcon);\n      var postIdToSendTwo = props.postId;\n      var postTitleToSendTwo = props.postTitle;\n      var likesMinusOne = numOfLikes - 1;\n      await API.addLike(\n        postIdToSendTwo,\n        likesMinusOne,\n        postTitleToSendTwo\n      ).then(setUserClicked(false));\n    }\n  };\n\n  const bookMark = async () => {\n    if (bookMarked === bookMarkIcon) {\n      setBookmarked(bookMarkIconClicked);\n    } else {\n      setBookmarked(bookMarkIcon);\n    }\n  };\n\n  return (\n    <div className=\"blog-btn-cont-page container-fluid\">\n      <button\n        className=\"like-btn\"\n        onClick={addLike}\n        style={{ backgroundImage: \"url(\" + likeBtn + \")\" }}\n      >\n      </button>\n      <button\n        className=\"bookmark-btn\"\n        onClick={bookMark}\n        style={{ backgroundImage: \"url(\" + bookMarked + \")\" }}\n      ></button>\n      <button\n        className=\"settings-btn\"\n        style={{ backgroundImage: \"url(\" + settingsIcon + \")\" }}\n      ></button>\n    </div>\n  );\n}\n","/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/InDepthPost.js",[],"/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/Login.js",["77"],"import React, { useContext, useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport prodFuncs from \"../utils/API\";\nimport UserContext from \"../utils/Context\";\nimport photo from \"../images/peak-blogspace-icon.png\";\nimport \"../stylesheets/login.css\";\n\nexport default function Login () {\n  const history = useHistory();\n  const { getUser } = useContext(UserContext);\n  const [show, setShow] = useState(false);\n  const usernameRef = useRef(null);\n  const passwordRef = useRef(null);\n  const rememberMeRef = useRef(null);\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const showModal = () => {\n    setShow(true);\n  };\n\n  const hideModal = () => {\n    setShow(false);\n  };\n\n  const checkCredentialValidity = (e) => {\n    e.preventDefault();\n    if (usernameRef.current.value === \"\") {\n      alert(\"Please Enter Username\");\n    } else if (\n      usernameRef.current.value < 8 ||\n      usernameRef.current.value > 20\n    ) {\n      alert(\"Please Meet Username Requirements\");\n    } else if (passwordRef.current.value === \"\") {\n      alert(\"Please Enter Password\");\n    } else if (\n      passwordRef.current.value < 8 ||\n      passwordRef.current.value > 20\n    ) {\n      alert(\"Please Meet Password Requirements\");\n    } else {\n      checkSqlForUser();\n    }\n  };\n  const checkSqlForUser = async (username, password) => {\n    await API.loginUser(\n      (username = usernameRef.current.value),\n      (password = passwordRef.current.value)\n    ).then(async function (res) {\n      if (res.data === \"Invalid Username or Password\") {\n        alert(\"Invalid Username or Password, Please Try Again\");\n        return;\n      } else {\n        getUser(res.data);\n        localStorage.setItem(\"loggedInUserId\" , res.data.id)\n        history.push(\"/home\");\n      }\n    });\n  };\n  const navSignup = () => {\n    history.push(\"/signup\");\n  };\n  if (show === false) {\n    return (\n      <div className=\"login-page container\">\n        <div className=\"div-left\"></div>\n        <div className=\"icon-div\">\n          <img src={photo} alt=\"Peak Icon\"></img>\n        </div>\n        <h2>HELLLASDASDS</h2>\n        <div className=\"intro-text-cont\">\n          <h1>Peak Blog Space</h1>\n          <div className=\"line\"></div>\n          <h4>\n            Lorem ipsum dolor sit amet, conse ctetur adipis cing elit. Pellen\n            tesque pretium enim at nisl luctus effic itur.\n          </h4>\n        </div>\n        <div className=\"btn-holder\">\n          <button className=\"login-btn\">\n            <h2 onClick={showModal}>Login</h2>\n          </button>\n          <button className=\"signup-btn\">\n            <h2 onClick={navSignup}>Sign up</h2>\n          </button>\n        </div>\n      </div>\n    );\n  } else if (show === true) {\n    return (\n      <div className=\"login-page container-fluid\">\n        <div className=\"login-modal\">\n          <div className=\"login-modal-header\">\n            <h2>Sign In</h2>\n            <button className=\"close-modal-btn\" onClick={hideModal}>\n              <h1>X</h1>\n            </button>\n          </div>\n          <div className=\"login-modal-body\">\n            <div className=\"input-fields\">\n              <input\n                type=\"text\"\n                id=\"input-text\"\n                ref={usernameRef}\n                placeholder=\"Username(8-20 Characters)\"\n              ></input>\n              <input\n                type=\"password\"\n                id=\"input-text\"\n                ref={passwordRef}\n                placeholder=\"Password(8-20 Characters)\"\n              ></input>\n            </div>\n            <label className=\"login-options-cont\">\n              <div>\n                <h4>Remember me</h4>\n                <input type=\"checkbox\" ref={rememberMeRef}></input>\n              </div>\n              <button className=\"forgot-pass-btn\">\n                <p className=\"forgotPassBtn\">Forgot Password?</p>\n              </button>\n            </label>\n            <div className=\"login-modal-btn\">\n              <button onClick={checkCredentialValidity}>\n                <h3>Login</h3>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/Signup.js",["78"],"import React, { useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport \"../stylesheets/signup.css\";\n\nexport default function Signup() {\n  const history = useHistory();\n  const firstNameRef = useRef(null);\n  const lastNameRef = useRef(null);\n  const usernameRef = useRef(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const ageRef = useRef(null);\n  const cityRef = useRef(null);\n  const zipRef = useRef(null);\n  const jobTitleRef = useRef(null);\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const validateForm = (e) => {\n    e.preventDefault();\n    var dateTime = new Date().toJSON().slice(0, 19).replace(\"T\", \" \");\n    var signupObject = {\n      firstName: firstNameRef.current.value,\n      lastName: lastNameRef.current.value,\n      username: usernameRef.current.value,\n      email: emailRef.current.value,\n      password: passwordRef.current.value,\n      age: ageRef.current.value,\n      city: cityRef.current.value,\n      zip: zipRef.current.value,\n      jobTitle: jobTitleRef.current.value,\n      date: dateTime,\n    };\n    if (signupObject.firstName === \"\") {\n      alert(\"Please enter user name\");\n    } else if (signupObject.lastName === \"\") {\n      alert(\"Please enter last name\");\n    } else if (signupObject.username === \"\") {\n      alert(\"Please enter username\");\n    } else if (signupObject.email === \"\") {\n      alert(\"Please enter email\");\n    } else if (signupObject.password === \"\") {\n      alert(\"Please enter email\");\n    } else if (signupObject.age === \"\") {\n      alert(\"Please enter age\");\n    } else if (signupObject.city === \"\") {\n      alert(\"Please enter city\");\n    } else if (signupObject.zip === \"\") {\n      alert(\"Please enter zip\");\n    } else if (signupObject.jobTitle === \"\") {\n      alert(\"Please enter job title\");\n    } else {\n      signupUser(signupObject);\n    }\n  };\n\n  const signupUser = async (signupObject) => {\n    await API.signupUser(signupObject).then(async function (res) {\n      console.log(res, \"response for sign up\");\n    });\n  };\n\n  return (\n    <div className=\"signup-page container-fixed\">\n      <div className=\"signup-container\">\n        <form>\n          <label>First</label>\n          <input type=\"text\" ref={firstNameRef}></input>\n          <label>Last</label>\n          <input type=\"text\" ref={lastNameRef}></input>\n          <label>Username</label>\n          <input type=\"text\" ref={usernameRef}></input>\n          <label>Email</label>\n          <input type=\"text\" ref={emailRef}></input>\n          <label>Password</label>\n          <input type=\"text\" ref={passwordRef}></input>\n        </form>\n        <form>\n          <label>Age</label>\n          <input type=\"text\" ref={ageRef}></input>\n          <label>City</label>\n          <input type=\"text\" ref={cityRef}></input>\n          <label>Zip</label>\n          <input type=\"text\" ref={zipRef}></input>\n          <label>Title</label>\n          <input type=\"text\" ref={jobTitleRef}></input>\n        </form>\n        <button onClick={validateForm} className=\"submit-btn\">\n          <p>Sign Up</p>\n        </button>\n      </div>\n    </div>\n  );\n}\n","/Users/logan/Active-Projects/peak-react/peak-fe/src/components/navbar/index.js",["79"],"import React, { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../utils/API\";\nimport UserContext from \"../../utils/Context\";\nimport peakIcon from \"../../images/peak-blogspace-icon.png\";\nimport \"./style.css\";\n\nexport default function NavbarTop() {\n  const { user } = useContext(UserContext);\n  const history = useHistory();\n  const [newBlogOpen, setNewBlogOpen] = useState(false);\n  // Refs for new blog post\n  const imgHeader = useRef(null);\n  const blogTitle = useRef(null);\n  const blogBody = useRef(null);\n  // Screen nav\n  const navHome = () => {\n    history.push(\"/home\");\n  };\n  const navBookmarks = () => {\n    history.push(\"/bookmarks\")\n  }\n  const navAccount = () => {\n    history.push(\"/myaccount\");\n  };\n  const navLogout = () => {\n    history.push(\"/\");\n  };\n  // open new blog modal\n  const openBlog = () => {\n    setNewBlogOpen(true);\n  };\n  const closeBlog = () => {\n    setNewBlogOpen(false);\n  };\n\n  const handleBlogPost = async (e) => {\n    e.preventDefault();\n    var resultsInFullScope = {};\n    var imgHeaderToSend = imgHeader.current.value;\n    var blogTitleToSend = blogTitle.current.value;\n    var blogBodyToSend = blogBody.current.value;\n    var userIdToSend = localStorage.getItem(\"loggedInUserId\");\n\n\n    var blogInfoToSend = {\n      imgHeaderToSend,\n      blogTitleToSend,\n      blogBodyToSend,\n      userIdToSend,\n    };\n\n    console.log(blogInfoToSend, \"blog info to send to server\")\n    await API.postNewBlog({ blogInfoToSend }).then((res) => {\n      resultsInFullScope = res;\n    });\n    if (resultsInFullScope.status === 202) {\n      setNewBlogOpen(false);\n    } else {\n      alert(\n        \"An error occurred while posting your blog, please try again later.\"\n      );\n    }\n  };\n\n  if (newBlogOpen === false) {\n    return (\n      <div className=\"navbar-cont\">\n        <div className=\"logo-cont\">\n          <img src={peakIcon} alt=\"Peak Icon\"></img>\n        </div>\n        <div className=\"new-post-btn\">\n          <button className=\"postBtnForReal\" onClick={openBlog}>\n            <h3>New Post</h3>\n          </button>\n        </div>\n        <div className=\"nav-btn-cont\">\n          <button id=\"nav-button\" onClick={navHome}>\n            <p>Home</p>\n          </button>\n          <button id=\"nav-button\" onClick={navBookmarks}>\n            <p>Bookmarked</p>\n          </button>\n          <button id=\"nav-button\" onClick={navAccount}>\n            <p>Account</p>\n          </button>\n          <button id=\"nav-button\" onClick={navLogout}>\n            <p>Log Out</p>\n          </button>\n        </div>\n      </div>\n    );\n  } else if (newBlogOpen === true) {\n    return (\n      <div className=\"modal-background container\">\n        <div className=\"new-post-modal\">\n          <button className=\"close-modal-btn\" onClick={closeBlog}>\n            X\n          </button>\n          <button className=\"open-dialog-btn\">\n            <i className=\"fas fa-search\"></i>\n          </button>\n          <h6 style={{ marginTop: \"2%\" }} id=\"category-text\">\n            Image Header\n          </h6>\n          <input id=\"modal-input\" ref={imgHeader} className=\"imgInput\"></input>\n          <h6 className=\"category-text\">Title</h6>\n          <input\n            id=\"modal-input\"\n            ref={blogTitle}\n          ></input>\n          <h6 style={{ marginLeft: \"8%\" }}>Body</h6>\n          <textarea\n            id=\"modal-input\"\n            ref={blogBody}\n            className=\"body-input\"\n          ></textarea>\n          <button\n            style={{ cursor: \"pointer\" }}\n            onClick={handleBlogPost}\n            className=\"submit-blog-btn\"\n          >\n            Create Post\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/logan/Active-Projects/peak-react/peak-fe/src/App.js",[],"/Users/logan/Active-Projects/peak-react/peak-fe/src/utils/API.js",["80"],"import axios from \"axios\";\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n\nconsole.log(process.env)\n\nif(process.env.NODE_ENV === \"development\"){\n    var devFuncs = {\n        signupUser: async function (userData) {\n            console.log(userData, \"user data for signup API\");\n            return await axios.post(`http://localhost:3005/account-info`, userData , {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n        loginUser: async function (username , password) {\n            console.log(username , password , \"username and password for auth\");\n            return await axios.get(`http://localhost:3005/account-info-login/${username}/${password}`, {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n        getAllPosts: async function(){\n            return await axios.get(`http://localhost:3005/user-posts`, {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n        getUserInfo: async function(id){\n            return await axios.get(`http://localhost:3005/user-details/${id}`, {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n        getPostDetails: async function(id){\n            console.log(id, \"id of post to get details\")\n            return await axios.get(`http://localhost:3005/user-posts/${id}` , {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n        getUsernamesForComments: async function(comment_ids){\n            console.log(comment_ids , \"comment id for API\")\n            return await axios.get(`http://localhost:3005/user-comments`  , {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                },\n                params : {\n                    stuff : comment_ids\n                }\n            })\n        },\n        postNewBlog: async function(blogContent){\n            console.log(blogContent, \"new blog for API\")\n            return await axios.post(`http://localhost:3005/create-new-post` , blogContent , {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n        getTopUserPosts : async function(id){\n            console.log(id , \"id for getTopUserPosts API\")\n            return await axios.get(`http://localhost:3005/getUserPost/${id}` , {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n\n        getTopUserComments : async function(id){\n            console.log(id , \"id for getTopUserComments api\")\n            return await axios.get(`http://localhost:3005/user-comments/${id}` , {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n        addLike : async function(numOfLikesToSend , postId , postTitle) {\n            console.log(numOfLikesToSend , \"num of likes for addLike API\");\n            console.log(postId , \"id of post addlike API\");\n            console.log(postTitle , \"post title for addLike API\")\n            return await axios.put(`http://localhost:3005/numOfLikesForPost/${postId}/${numOfLikesToSend}/${postTitle}` , {\n                headers: {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        },\n        deletePost : async function(postId) {\n            console.log( postId , \"id of post to delete for API\");\n            return await axios.delete(`http://localhost:3005/user-posts/${postId}` , {\n                headers : {\n                    'Access-Control-Allow-Origin': '*'\n                }\n            })\n        }\n    }\n\n}else if(process.env.NODE_ENV === \"production\"){\nvar prodFuncs = {\n    signupUser: async function (userData) {\n        console.log(userData, \"user data for signup API\");\n        return await axios.post(`https://peak-blogspace.herokuapp.com/account-info` , userData, {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    },\n    loginUser: async function (username , password) {\n        console.log(username , password , \"username and password for auth\");\n        return await axios.get(`https://peak-blogspace.herokuapp.com/account-info-login/${username}/${password}`, {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        })\n    },\n    getAllPosts: async function(){\n        return await axios.get(`https://peak-blogspace.herokuapp.com/user-posts`, {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    },\n    getUserInfo: async function(id){\n        return await axios.get(`https://peak-blogspace.herokuapp.com/user-details/${id}`, {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    },\n    getPostDetails: async function(id){\n        console.log(id, \"id of post to get details\")\n        return await axios.get(`https://peak-blogspace.herokuapp.com/user-posts/${id}` , {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    },\n    getUsernamesForComments: async function(comment_ids){\n        console.log(comment_ids , \"comment id for API\")\n        return await axios.get(`https://peak-blogspace.herokuapp.com/user-comments/` + comment_ids , {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    },\n    postNewBlog: async function(blogContent){\n        console.log(blogContent, \"new blog for API\")\n        return await axios.post(`https://peak-blogspace.herokuapp.com/create-new-post` , blogContent , {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    },\n    getTopUserPosts : async function(id){\n        console.log(id , \"id for getTopUserPosts API\")\n        return await axios.get(`https://peak-blogspace.herokuapp.com/getUserPost/${id}` , {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    },\n\n    getTopUserComments : async function(id){\n        console.log(id , \"id for getTopUserComments api\")\n        return await axios.get(`https://peak-blogspace.herokuapp.com/user-comments/${id}` , {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    },\n    addLike : async function(numOfLikesToSend , postId , postTitle) {\n        console.log(numOfLikesToSend , \"num of likes for addLike API\");\n        console.log(postId , \"id of post addlike API\");\n        console.log(postTitle , \"post title for addLike API\")\n        return await axios.put(`https://peak-blogspace.herokuapp.com/${postId}/${numOfLikesToSend}/${postTitle}` , {\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        })\n    }\n}\n}\nexport default (prodFuncs , devFuncs)","/Users/logan/Active-Projects/peak-react/peak-fe/src/reportWebVitals.js",[],"/Users/logan/Active-Projects/peak-react/peak-fe/src/screens/Bookmarks.js",["81","82","83"],"import React, { useContext, useEffect, useState } from \"react\";\nimport '../stylesheets/bookmarks.css';\n\n\n\nexport default function Bookmarks(){\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return(\n        <div className=\"bookmarks_page\">\n            <h1>Bookmarks page</h1>\n        </div>\n    )\n}",["84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"86","replacedBy":"90"},{"ruleId":"88","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":7,"column":23,"nodeType":"94","messageId":"95","endLine":7,"endColumn":37},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","replacedBy":"97"},{"ruleId":"92","severity":1,"message":"98","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":27},{"ruleId":"92","severity":1,"message":"99","line":1,"column":29,"nodeType":"94","messageId":"95","endLine":1,"endColumn":38},{"ruleId":"92","severity":1,"message":"100","line":1,"column":40,"nodeType":"94","messageId":"95","endLine":1,"endColumn":46},{"ruleId":"92","severity":1,"message":"101","line":13,"column":10,"nodeType":"94","messageId":"95","endLine":13,"endColumn":25},{"ruleId":"92","severity":1,"message":"102","line":13,"column":27,"nodeType":"94","messageId":"95","endLine":13,"endColumn":45},{"ruleId":"92","severity":1,"message":"103","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"92","severity":1,"message":"104","line":7,"column":9,"nodeType":"94","messageId":"95","endLine":7,"endColumn":16},{"ruleId":"92","severity":1,"message":"105","line":9,"column":11,"nodeType":"94","messageId":"95","endLine":9,"endColumn":15},{"ruleId":"92","severity":1,"message":"106","line":3,"column":7,"nodeType":"94","messageId":"95","endLine":3,"endColumn":15},{"ruleId":"92","severity":1,"message":"98","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":27},{"ruleId":"92","severity":1,"message":"99","line":1,"column":29,"nodeType":"94","messageId":"95","endLine":1,"endColumn":38},{"ruleId":"92","severity":1,"message":"107","line":1,"column":40,"nodeType":"94","messageId":"95","endLine":1,"endColumn":48},{"ruleId":"86","replacedBy":"108"},{"ruleId":"88","replacedBy":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],["110"],["111"],"no-unused-vars","'setTopComments' is assigned a value but never used.","Identifier","unusedVar",["110"],["111"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'settingsClicked' is assigned a value but never used.","'setSettingsClicked' is assigned a value but never used.","'prodFuncs' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'proxyurl' is assigned a value but never used.","'useState' is defined but never used.",["110"],["111"],"no-global-assign","no-unsafe-negation"]